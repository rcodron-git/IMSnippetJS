<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Node App</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- pretty-print-json CSS -->
    <link href="https://cdn.jsdelivr.net/npm/pretty-print-json@3.0/dist/pretty-print-json.css" rel="stylesheet">
</head>
<body class="container">
    <h1 class="mt-5">Welcome to My Node App</h1>
    <button class="btn btn-primary" onclick="getToken()">Get Token</button>
    <button class="btn btn-secondary" onclick="orderSearch()">Orders Search</button>
    <button class="btn btn-info" onclick="productSearch()">Products Search</button>
    <button class="btn btn-warning" onclick="quoteSearch()">Quote Search</button>
    <div id="formOderDetails" class="mt-3">
        <form id="orderForm" class="mt-3">
            <div class="form-group">
                <label for="orderNumber">Give an IM Order Number to get the detail</label>
                <input type="text" class="form-control" id="orderNumber" placeholder="Enter order number">
            </div>
            <button type="button" class="btn btn-info" onclick="orderDetail()">Get Details</button>
        </form>
    </div>
    <div id="result" class="mt-3"></div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- pretty-print-json JS -->
    <script src="https://cdn.jsdelivr.net/npm/pretty-print-json@3.0/dist/pretty-print-json.min.js"></script>
    <script>
        async function getToken() {
            try {
                const response = await fetch('/api/auth', { method: 'POST' });
                const data = await response.json();
                document.getElementById('result').innerText = 'Token: ' + data.token;
            } catch (error) {
                document.getElementById('result').innerText = 'Error getting token: ' + error.message;
            }
        }

        async function orderSearch() {
            try {
                const response = await fetch('/api/orders/search');
                const data = await response.json();
                //document.getElementById('result').innerHTML = prettyPrintJson.toHtml(data);
                //document.getElementById('result').innerText = JSON.stringify(data, null, 2);
                document.getElementById('result').innerHTML = `
                <h3>Orders</h3>
                <p>Records Found: ${data.recordsFound}</p>
                <p>Page Number: ${data.pageNumber}</p>
                <p>Page Size: ${data.pageSize}</p>
                ${data.orders.map(order => `
                    <div class="card mt-3">
                        <div class="card-body">
                            <h5 class="card-title">Order Number: ${order.ingramOrderNumber || 'N/A'}</h5>
                            <p class="card-text">Order Date: ${order.ingramOrderDate}</p>
                            <p class="card-text">Customer Order Number: ${order.customerOrderNumber}</p>
                            <p class="card-text">Order Status: ${order.orderStatus}</p>
                            <p class="card-text">Order Total: ${order.orderTotal}</p>
                            <h6 class="card-subtitle mb-2 text-muted">Links:</h6>
                            <p class="card-text">${order.links.topic}: <a href="${order.links.href}" target="_blank">${order.links.href}</a> (${order.links.type})</p>
                            <h6 class="card-subtitle mb-2 text-muted">Sub Orders:</h6>
                            ${order.subOrders.map(subOrder => `
                                <div class="card mt-2">
                                    <div class="card-body">
                                        <p class="card-text">Sub Order Total: ${subOrder.subOrderTotal}</p>
                                        <p class="card-text">Sub Order Status: ${subOrder.subOrderStatus}</p>
                                        ${subOrder.links.map(link => `
                                            <p class="card-text">${link.topic}: <a href="${link.href}" target="_blank">${link.href}</a> (${link.type})</p>
                                        `).join('')}
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                `).join('')}
            `;
            } catch (error) {
                document.getElementById('result').innerText = 'Error fetching orders: ' + error.message;
            }
        }

        async function productSearch() {
            try {
                const response = await fetch('/api/products/search');
                const data = await response.json();
                //document.getElementById('result').innerHTML = prettyPrintJson.toHtml(data);
                //document.getElementById('result').innerText = JSON.stringify(data, null, 2);
                document.getElementById('result').innerHTML = `
                <h3>Product Catalog</h3>
                <p>Records Found: ${data.recordsFound}</p>
                <p>Page Number: ${data.pageNumber}</p>
                <p>Page Size: ${data.pageSize}</p>
                ${data.catalog.map(product => `
                    <div class="card mt-3">
                        <div class="card-body">
                            <h5 class="card-title">Description: ${product.description}</h5>
                            <p class="card-text">Category: ${product.category}</p>
                            <p class="card-text">SubCategory: ${product.subCategory}</p>
                            <p class="card-text">Ingram Part Number: ${product.ingramPartNumber}</p>
                            <p class="card-text">Vendor Part Number: ${product.vendorPartNumber}</p>
                            <p class="card-text">UPC Code: ${product.upcCode}</p>
                            <p class="card-text">Vendor Name: ${product.vendorName}</p>
                            <p class="card-text">End User Required: ${product.endUserRequired}</p>
                            <p class="card-text">Has Discounts: ${product.hasDiscounts}</p>
                            <p class="card-text">Discontinued: ${product.discontinued}</p>
                            <p class="card-text">New Product: ${product.newProduct}</p>
                            <p class="card-text">Direct Ship: ${product.directShip}</p>
                            <p class="card-text">Has Warranty: ${product.hasWarranty}</p>
                            <p class="card-text">Replacement SKU: ${product.replacementSku}</p>
                            <p class="card-text">Authorized To Purchase: ${product.authorizedToPurchase}</p>
                            <p class="card-text">Extra Description: ${product.extraDescription}</p>
                            <h6 class="card-subtitle mb-2 text-muted">Links:</h6>
                            ${product.links.map(link => `
                                <p class="card-text">${link.topic}: <a href="${link.href}" target="_blank">${link.href}</a> (${link.type})</p>
                            `).join('')}
                        </div>
                    </div>
                `).join('')}
            `;
            } catch (error) {
                document.getElementById('result').innerText = 'Error fetching products: ' + error.message;
            }
        }

        async function quoteSearch() {
            try {
                const response = await fetch('/api/quotes/search');
                const data = await response.json();
                //document.getElementById('result').innerHTML = prettyPrintJson.toHtml(data);
                document.getElementById('result').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                document.getElementById('result').innerText = 'Error fetching products: ' + error.message;
            }
        }

        async function orderDetail() {
            const orderNumber = document.getElementById('orderNumber').value;
            try {
                const response = await fetch(`/api/orders/${orderNumber}`);
                const data = await response.json();
                //document.getElementById('result').innerHTML = prettyPrintJson.toHtml(data);
                document.getElementById('result').innerHTML = `
                    <h3>Order Details</h3>
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Order Number: ${data.ingramOrderNumber || 'N/A'}</h5>
                            <p class="card-text">Order Date: ${data.ingramOrderDate || 'N/A'}</p>
                            <p class="card-text">Order Type: ${data.orderType || 'N/A'}</p>
                            <p class="card-text">Customer Order Number: ${data.customerOrderNumber || 'N/A'}</p>
                            <p class="card-text">Order Status: ${data.orderStatus || 'N/A'}</p>
                            <p class="card-text">Order Total: ${data.orderTotal || 'N/A'} ${data.currencyCode || ''}</p>
                            <p class="card-text">Order Subtotal: ${data.orderSubTotal || 'N/A'} ${data.currencyCode || ''}</p>
                            <p class="card-text">Freight Charges: ${data.freightCharges || 'N/A'} ${data.currencyCode || ''}</p>
                            <p class="card-text">Total Tax: ${data.totalTax || 'N/A'} ${data.currencyCode || ''}</p>
                            <p class="card-text">Payment Terms: ${data.paymentTerms || 'N/A'}</p>
                            <h5 class="card-title">Bill To Info</h5>
                            <p class="card-text">Contact: ${data.billToInfo.contact || 'N/A'}</p>
                            <p class="card-text">Company Name: ${data.billToInfo.companyName || 'N/A'}</p>
                            <p class="card-text">Address: ${data.billToInfo.addressLine1 || 'N/A'}, ${data.billToInfo.addressLine2 || ''}, ${data.billToInfo.city || 'N/A'}, ${data.billToInfo.countryCode || 'N/A'}</p>
                            <p class="card-text">Phone Number: ${data.billToInfo.phoneNumber || 'N/A'}</p>
                            <h5 class="card-title">Ship To Info</h5>
                            <p class="card-text">Contact: ${data.shipToInfo.contact || 'N/A'}</p>
                            <p class="card-text">Company Name: ${data.shipToInfo.companyName || 'N/A'}</p>
                            <p class="card-text">Address: ${data.shipToInfo.addressLine1 || 'N/A'}, ${data.shipToInfo.addressLine2 || ''}, ${data.shipToInfo.city || 'N/A'}, ${data.shipToInfo.countryCode || 'N/A'}</p>
                            <p class="card-text">Phone Number: ${data.shipToInfo.phoneNumber || 'N/A'}</p>
                            <h5 class="card-title">Order Lines</h5>
                            ${Array.isArray(data.lines) ? data.lines.map(line => `
                                <div class="card mt-3">
                                    <div class="card-body">
                                        <h5 class="card-title">Line Number: ${line.ingramOrderLineNumber || 'N/A'}</h5>
                                        <p class="card-text">Part Number: ${line.ingramPartNumber || 'N/A'}</p>
                                        <p class="card-text">Description: ${line.partDescription || 'N/A'}</p>
                                        <p class="card-text">Quantity Ordered: ${line.quantityOrdered || 'N/A'}</p>
                                        <p class="card-text">Unit Price: ${line.unitPrice || 'N/A'} ${line.currencyCode || ''}</p>
                                        <p class="card-text">Extended Price: ${line.extendedPrice || 'N/A'} ${line.currencyCode || ''}</p>
                                        <p class="card-text">Line Status: ${line.lineStatus || 'N/A'}</p>
                                    </div>
                                </div>
                            `).join('') : '<p>No order lines found.</p>'}
                        </div>
                    </div>
                `;
            } catch (error) {
                document.getElementById('result').innerText = 'Error fetching order: ' + error.message;
            }
        }
    </script>
</body>
</html>